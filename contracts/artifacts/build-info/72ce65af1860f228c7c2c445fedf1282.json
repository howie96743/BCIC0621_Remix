{
	"id": "72ce65af1860f228c7c2c445fedf1282",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.4",
	"solcLongVersion": "0.7.4+commit.3f05b770",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/demo 1.sol": {
				"content": "// ã„‹\npragma solidity 0.7.4;\ncontract Demo1{\n    \n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/demo 1.sol": {
				"Demo1": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/demo 1.sol\":30:52  contract Demo1{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/demo 1.sol\":30:52  contract Demo1{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202fd8cbc57a2d2b8d318cdb81b1fb3d4d74175575b672cade544f78bebaf9a57564736f6c63430007040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212202fd8cbc57a2d2b8d318cdb81b1fb3d4d74175575b672cade544f78bebaf9a57564736f6c63430007040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0xD8 0xCB 0xC5 PUSH27 0x2D2B8D318CDB81B1FB3D4D74175575B672CADE544F78BEBAF9A575 PUSH5 0x736F6C6343 STOP SMOD DIV STOP CALLER ",
							"sourceMap": "30:22:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212202fd8cbc57a2d2b8d318cdb81b1fb3d4d74175575b672cade544f78bebaf9a57564736f6c63430007040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0xD8 0xCB 0xC5 PUSH27 0x2D2B8D318CDB81B1FB3D4D74175575B672CADE544F78BEBAF9A575 PUSH5 0x736F6C6343 STOP SMOD DIV STOP CALLER ",
							"sourceMap": "30:22:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 30,
									"end": 52,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 30,
									"end": 52,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30,
									"end": 52,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30,
									"end": 52,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 30,
									"end": 52,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30,
									"end": 52,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 30,
									"end": 52,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30,
									"end": 52,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30,
									"end": 52,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30,
									"end": 52,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30,
									"end": 52,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 30,
									"end": 52,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30,
									"end": 52,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30,
									"end": 52,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30,
									"end": 52,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30,
									"end": 52,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30,
									"end": 52,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30,
									"end": 52,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30,
									"end": 52,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 30,
									"end": 52,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30,
									"end": 52,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202fd8cbc57a2d2b8d318cdb81b1fb3d4d74175575b672cade544f78bebaf9a57564736f6c63430007040033",
									".code": [
										{
											"begin": 30,
											"end": 52,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 30,
											"end": 52,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30,
											"end": 52,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30,
											"end": 52,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30,
											"end": 52,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30,
											"end": 52,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/demo 1.sol\":\"Demo1\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/demo 1.sol\":{\"keccak256\":\"0x0e4b72d7b9b11b5713ac7c51411445f2b0a84cc267d725dbfa9cdccc55c01d89\",\"urls\":[\"bzz-raw://885a25b086bc3bdddad4e5ee74ee35f09d579c0222859c0820fed8714d42f042\",\"dweb:/ipfs/Qmcpp2n6xxVcf5cZE1qTfRaAG3Diaxbx6D6FsCxzJn9jtc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "contracts/demo 1.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/demo 1.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/demo 1.sol": {
				"ast": {
					"absolutePath": "contracts/demo 1.sol",
					"exportedSymbols": {
						"Demo1": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.7",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "7:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Demo1",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "30:22:0"
						}
					],
					"src": "7:45:0"
				},
				"id": 0
			}
		}
	}
}