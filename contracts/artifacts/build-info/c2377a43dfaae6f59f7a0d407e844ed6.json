{
	"id": "c2377a43dfaae6f59f7a0d407e844ed6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.4",
	"solcLongVersion": "0.7.4+commit.3f05b770",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/demo 1.sol": {
				"content": "// SPDX \npragma solidity 0.7.4;\ncontract Demo1{\n    \n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/demo 1.sol": {
				"Demo1": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/demo 1.sol\":32:54  contract Demo1{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/demo 1.sol\":32:54  contract Demo1{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200c5a032e52b132ddb5e13d900ff34494ef598df1fc76aa697dc761167012514664736f6c63430007040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212200c5a032e52b132ddb5e13d900ff34494ef598df1fc76aa697dc761167012514664736f6c63430007040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC GAS SUB 0x2E MSTORE 0xB1 ORIGIN 0xDD 0xB5 0xE1 RETURNDATASIZE SWAP1 0xF RETURN DIFFICULTY SWAP5 0xEF MSIZE DUP14 CALL 0xFC PUSH23 0xAA697DC761167012514664736F6C634300070400330000 ",
							"sourceMap": "32:22:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212200c5a032e52b132ddb5e13d900ff34494ef598df1fc76aa697dc761167012514664736f6c63430007040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC GAS SUB 0x2E MSTORE 0xB1 ORIGIN 0xDD 0xB5 0xE1 RETURNDATASIZE SWAP1 0xF RETURN DIFFICULTY SWAP5 0xEF MSIZE DUP14 CALL 0xFC PUSH23 0xAA697DC761167012514664736F6C634300070400330000 ",
							"sourceMap": "32:22:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 32,
									"end": 54,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 32,
									"end": 54,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 32,
									"end": 54,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 32,
									"end": 54,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 32,
									"end": 54,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 32,
									"end": 54,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 32,
									"end": 54,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 32,
									"end": 54,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 32,
									"end": 54,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32,
									"end": 54,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 32,
									"end": 54,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 32,
									"end": 54,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 32,
									"end": 54,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 32,
									"end": 54,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 32,
									"end": 54,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 32,
									"end": 54,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 32,
									"end": 54,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 32,
									"end": 54,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32,
									"end": 54,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 32,
									"end": 54,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32,
									"end": 54,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200c5a032e52b132ddb5e13d900ff34494ef598df1fc76aa697dc761167012514664736f6c63430007040033",
									".code": [
										{
											"begin": 32,
											"end": 54,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 32,
											"end": 54,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32,
											"end": 54,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32,
											"end": 54,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32,
											"end": 54,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32,
											"end": 54,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/demo 1.sol\":\"Demo1\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/demo 1.sol\":{\"keccak256\":\"0xc1c379a96e17ec2648f1740b20673e2c351c0b167ef2c53f6038c3079d01f11d\",\"urls\":[\"bzz-raw://218bdd1c6e5a01f37469a0fccdcfe912a276091032dfca9a50bdbcf31aa6f1e3\",\"dweb:/ipfs/QmUmMvPbTaVqZ6EfgV8PbzhpQhHqG9v14c2DcDJKCFQhSE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "contracts/demo 1.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/demo 1.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/demo 1.sol": {
				"ast": {
					"absolutePath": "contracts/demo 1.sol",
					"exportedSymbols": {
						"Demo1": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.7",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "9:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Demo1",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "32:22:0"
						}
					],
					"src": "9:45:0"
				},
				"id": 0
			}
		}
	}
}