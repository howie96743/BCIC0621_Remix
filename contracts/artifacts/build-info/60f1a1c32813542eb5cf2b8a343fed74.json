{
	"id": "60f1a1c32813542eb5cf2b8a343fed74",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.4",
	"solcLongVersion": "0.7.4+commit.3f05b770",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/demo 1.sol": {
				"content": "// SPDX\npragma solidity 0.7.4;\ncontract Demo1{\n    \n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/demo 1.sol": {
				"Demo1": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/demo 1.sol\":31:53  contract Demo1{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/demo 1.sol\":31:53  contract Demo1{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201791da1fe5784bf3d8cc6bdbd19831ec9b36914ac4a03a8a3b13bc0a0d9a718c64736f6c63430007040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212201791da1fe5784bf3d8cc6bdbd19831ec9b36914ac4a03a8a3b13bc0a0d9a718c64736f6c63430007040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR SWAP2 0xDA 0x1F 0xE5 PUSH25 0x4BF3D8CC6BDBD19831EC9B36914AC4A03A8A3B13BC0A0D9A71 DUP13 PUSH5 0x736F6C6343 STOP SMOD DIV STOP CALLER ",
							"sourceMap": "31:22:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212201791da1fe5784bf3d8cc6bdbd19831ec9b36914ac4a03a8a3b13bc0a0d9a718c64736f6c63430007040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR SWAP2 0xDA 0x1F 0xE5 PUSH25 0x4BF3D8CC6BDBD19831EC9B36914AC4A03A8A3B13BC0A0D9A71 DUP13 PUSH5 0x736F6C6343 STOP SMOD DIV STOP CALLER ",
							"sourceMap": "31:22:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 31,
									"end": 53,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 31,
									"end": 53,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 31,
									"end": 53,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31,
									"end": 53,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 31,
									"end": 53,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31,
									"end": 53,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 31,
									"end": 53,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 31,
									"end": 53,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 31,
									"end": 53,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31,
									"end": 53,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31,
									"end": 53,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 31,
									"end": 53,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 31,
									"end": 53,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31,
									"end": 53,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 31,
									"end": 53,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 31,
									"end": 53,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31,
									"end": 53,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 31,
									"end": 53,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31,
									"end": 53,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 31,
									"end": 53,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31,
									"end": 53,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201791da1fe5784bf3d8cc6bdbd19831ec9b36914ac4a03a8a3b13bc0a0d9a718c64736f6c63430007040033",
									".code": [
										{
											"begin": 31,
											"end": 53,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 31,
											"end": 53,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31,
											"end": 53,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31,
											"end": 53,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31,
											"end": 53,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31,
											"end": 53,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/demo 1.sol\":\"Demo1\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/demo 1.sol\":{\"keccak256\":\"0x3fc9d716311c36a8af7bd3968a9b15b7689b37a1923224f935ccf07dcb4c89aa\",\"urls\":[\"bzz-raw://4c103b2b3c9fcdaacc29a90a1a32e556d3aca00a4b651b642d79eef77e68a5c6\",\"dweb:/ipfs/QmTzBdi6zQwJikvz2Cz2crWGMuYsNomnWUr6SSEob6wpon\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "contracts/demo 1.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/demo 1.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/demo 1.sol": {
				"ast": {
					"absolutePath": "contracts/demo 1.sol",
					"exportedSymbols": {
						"Demo1": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.7",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "8:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Demo1",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "31:22:0"
						}
					],
					"src": "8:45:0"
				},
				"id": 0
			}
		}
	}
}